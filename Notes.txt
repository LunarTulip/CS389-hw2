1: State goals and define system
    Goals: measure response time
    System: our client and server programs, the hardware they run on, the network interface between them

2: List services and outcomes
    Service: send HTML responses to HTML requests
        Outcome: response is correct
        Outcome: response is incorrect
        Outcome: response isn't sent at all
    Service: save user-input data for retrieval
        Outcome: successfully saves data retrieveably
        Outcome: saves irretrievably or fails to save
    Service: destroy itself when given the correct request and not otherwise
        Outcome: successful destruction on request
        Outcome: failed destruction on request
        Outcome: non-destruction in absence of a request
        Outcome: server destroys itself unrequestedly

3: Select metrics
    Response time
    Sustained throughput (defined in 2. of the hw5 prompt)

4: List parameters
    # requests per second
    Avg. key size
    Variance in key size
    Avg. val size
    Variange in val size
    Network speed
    Network overhead
    Processor speed
    Processor overhead
    Read:write ratio
    Cache size

5: Select factors to study
    # requests per second
        Low: 16
        Go up in powers of two, as usual
    Network speed
        Fast: localhost
        Slow: not-localhost
    Avg. val size
        Small: 10
        Large: 10,000

6: Select evaluation technique
    Measure a real system

7: Select workload
    65% GET, 5% SET, 30% DELETE
    Random ordering of requests, pending assumptions

8: Design experiments
    Toss our selected workload at the server, varying requests per second and average val size according to 

9: Analyze and interpret data

10: Present results